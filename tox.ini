[tox]
envlist = d{20,21,22,30,31}-py{36,37,38}-{pg,sqlite,mysql}
isolated_build = true
skip_missing_interpreters = true

[pytest]
python_paths=./tests/testproject/ src
DJANGO_SETTINGS_MODULE=testproject.settings
django_find_project = false
norecursedirs = .tox .venv
python_files=tests/test_*.py
log_print = false
log_cli = false
addopts =
        -rs
        --tb=short
        --capture=no
        --cov=relativedeltafield
        --cov-report=html
        --cov-config=tests/.coveragerc
        --echo-version django


[testenv]
isolated_build=true
passenv = TRAVIS TRAVIS_JOB_ID TRAVIS_BRANCH PYTHONDONTWRITEBYTECODE MYSQL_PASSWORD
whitelist_externals = poetry
setenv =
    PYTHONWARNINGS=module::DeprecationWarning
    PYTHONDONTWRITEBYTECODE=true
    pg: DBENGINE = pg
    mysql: DBENGINE = mysql
    sqlite: DBENGINE = sqlite

deps =
    poetry
    d20: django>=2.0,<2.1
    d21: django>=2.1,<2.2
    d22: django>=2.2,<2.3
    d30: django==3.0.*
    d31: django==3.1.*


commands_pre =
    poetry export -f requirements.txt -o .tox/requirements.txt
commands =
    pip install -r .tox/requirements.txt
;    poetry install -v
    poetry run pytest tests --create-db \
            --cov --cov-append \
            --cov-config=tests/.coveragerc \
            --cov=relatvedelta
;
;    {posargs:pytest tests --create-db \
;            --cov --cov-append \
;            --cov-config=tests/.coveragerc \
;            --cov=relatvedelta}
    poetry build
    poetry run twine check dist/*
